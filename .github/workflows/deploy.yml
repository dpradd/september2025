name: Deploy Web Site

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build App"]
    types:
      - completed
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        default: prod
    secrets:
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true

jobs:
  terraform:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
       TF_VAR_env: ${{ inputs.environment }}
       TF_VAR_location: "westeurope"
       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: .github/terraform/${{ inputs.environment }}
        run: |
          terraform init \
          -backend-config="resource_group_name=${{ vars.TF_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.TF_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.TF_CONTAINER_NAME }}" \
          -backend-config="key=${{ inputs.environment }}.tfstate"

      - name: Terraform Plan
        working-directory: .github/terraform/${{ inputs.environment }}
        run: terraform plan -var="env=${{ inputs.environment }}"

      - name: Terraform Apply
        working-directory: .github/terraform/${{ inputs.environment }}
        run: terraform apply -auto-approve -var="env=${{ inputs.environment }}"

      - name: Get App Name
        id: output
        working-directory: .github/terraform/${{ inputs.environment }}
        run: echo "app_name=$(terraform output -raw webapp_name)" >> $GITHUB_ENV

      - name: Get Resource Group Name
        id: outputRG
        working-directory: .github/terraform/${{ inputs.environment }}
        run: echo "resource_group_name=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV

  deploy-app:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: .

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # - name: Get publish profile XML
      #   id: publishprofile
      #   run: |
      #     az webapp deployment list-publishing-profiles \
      #       --name {{ env.app_name }} \
      #       --resource-group {{ env.resource_group_name }} \
      #       --xml > publishProfile.xml

      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: {{ env.app_name }}
      #     package: app.zip
      #     publish-profile: {{ steps.publishprofile.outputs.profile }}

      - uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.app_name }}
          package: app.zip